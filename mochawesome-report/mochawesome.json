{
  "stats": {
    "suites": 5,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "start": "2023-01-28T21:08:23.398Z",
    "end": "2023-01-28T21:08:24.039Z",
    "duration": 641,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fbf0a62e-ecfd-4428-acbc-89fbd60c9cf6",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 103,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "newplayer = await createPlayerList();",
          "err": {},
          "uuid": "4793aa2b-355b-483e-9e60-0625a870555d",
          "parentUUID": "fbf0a62e-ecfd-4428-acbc-89fbd60c9cf6",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e63b7dc4-9e1a-442e-97f7-f3750eb82936",
          "title": "User registration",
          "fullFile": "E:\\MERN Coding Challenge DYN\\Node JS DY\\test\\auth.spec.js",
          "file": "\\test\\auth.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create user account with correct payload",
              "fullTitle": "User registration Create user account with correct payload",
              "timedOut": false,
              "duration": 158,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n  teamname: \"Argentina\",\n  email: \"afsdfdsfdsf65655@gmail.com\",\n  password: \"123456\",\n};\nconst response = await axios.post(API_URL + \"/registration\", payload);\nexpect(response.status).to.be.equal(201);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "4214497d-a197-4b99-907d-ed31af9269ce",
              "parentUUID": "e63b7dc4-9e1a-442e-97f7-f3750eb82936",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create user account without adding teamname ",
              "fullTitle": "User registration Create user account without adding teamname ",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const payload = {\n    email: \"dsfds7878@gmail.com\",\n    password: \"123566456\",\n  };\n  const response = await axios.post(API_URL + \"/registration\", payload);\n  expect(response.status).not.to.be.equal(201);\n  console.log(response.status);\n  expect(response.data).to.be.an(\"object\");\n} catch (error) {\n  if (error.response) {\n    expect(error.response.status).not.to.be.equal(201);\n  } else {\n    throw error;\n  }\n}",
              "err": {},
              "uuid": "0b2a2a03-b28e-48db-9245-2b9c970cfa51",
              "parentUUID": "e63b7dc4-9e1a-442e-97f7-f3750eb82936",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create user account without adding email ",
              "fullTitle": "User registration Create user account without adding email ",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const payload = {\n    teamname: \"gffg\",\n    password: \"123456\",\n  };\n  const response = await axios.post(API_URL + \"/registration\", payload);\n  expect(response.status).not.to.be.equal(201);\n  expect(response.data).to.be.an(\"object\");\n} catch (error) {\n  if (error.response) {\n    expect(error.response.status).not.to.be.equal(201);\n  } else {\n    throw error;\n  }\n}",
              "err": {},
              "uuid": "c589b2e6-4356-4f01-9e6d-0f9388b39a25",
              "parentUUID": "e63b7dc4-9e1a-442e-97f7-f3750eb82936",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create user account without adding password ",
              "fullTitle": "User registration Create user account without adding password ",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const payload = {\n    teamname: \"Belgium\",\n    email: \"uiiui78@gmail.com\",\n  };\n  const response = await axios.post(API_URL + \"/registration\", payload);\n  expect(response.status).not.to.be.equal(201);\n  expect(response.data).to.be.an(\"object\");\n} catch (error) {\n  if (error.response) {\n    expect(error.response.status).not.to.be.equal(201);\n  } else {\n    throw error;\n  }\n}",
              "err": {},
              "uuid": "b87720e1-5c63-46fa-bed6-cc92ffb0625d",
              "parentUUID": "e63b7dc4-9e1a-442e-97f7-f3750eb82936",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4214497d-a197-4b99-907d-ed31af9269ce",
            "0b2a2a03-b28e-48db-9245-2b9c970cfa51",
            "c589b2e6-4356-4f01-9e6d-0f9388b39a25",
            "b87720e1-5c63-46fa-bed6-cc92ffb0625d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 175,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0c8e66f2-8627-414a-ad08-7f63056008c7",
          "title": "User login",
          "fullFile": "E:\\MERN Coding Challenge DYN\\Node JS DY\\test\\auth.spec.js",
          "file": "\\test\\auth.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login with correct payload",
              "fullTitle": "User login Login with correct payload",
              "timedOut": false,
              "duration": 139,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n  email: \"a@gmail.com\",\n  password: \"123456\",\n};\nconst response = await axios.post(API_URL + \"/login\", payload);\nexpect(response.status).to.be.equal(200);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "29c61e5b-bc35-4c05-b28e-ba51b8ee1fc5",
              "parentUUID": "0c8e66f2-8627-414a-ad08-7f63056008c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login without adding email",
              "fullTitle": "User login Login without adding email",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const payload = {\n    password: \"123456\",\n  };\n  const response = await axios.post(API_URL + \"/login\", payload);\n  expect(response.status).not.to.be.equal(200);\n  expect(response.data).to.be.an(\"object\");\n} catch (error) {\n  if (error.response) {\n    expect(error.response.status).not.to.be.equal(201);\n  } else {\n    throw error;\n  }\n}",
              "err": {},
              "uuid": "a13b33c8-3479-41f7-8dd4-2456559d4315",
              "parentUUID": "0c8e66f2-8627-414a-ad08-7f63056008c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login without adding password",
              "fullTitle": "User login Login without adding password",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const payload = {\n    email: \"a@gmail.com\",\n  };\n  const response = await axios.post(API_URL + \"/login\", payload);\n  expect(response.status).not.to.be.equal(200);\n  expect(response.data).to.be.an(\"object\");\n} catch (error) {\n  if (error.response) {\n    expect(error.response.status).not.to.be.equal(201);\n  } else {\n    throw error;\n  }\n}",
              "err": {},
              "uuid": "98100ea2-4f7c-4c63-b46a-21edb4766df4",
              "parentUUID": "0c8e66f2-8627-414a-ad08-7f63056008c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "29c61e5b-bc35-4c05-b28e-ba51b8ee1fc5",
            "a13b33c8-3479-41f7-8dd4-2456559d4315",
            "98100ea2-4f7c-4c63-b46a-21edb4766df4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 147,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8dca376d-65bc-4f9e-bd1f-93d21211a99d",
          "title": "Create player list",
          "fullFile": "E:\\MERN Coding Challenge DYN\\Node JS DY\\test\\player_list.spec.js",
          "file": "\\test\\player_list.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create player list with correct payload",
              "fullTitle": "Create player list Create player list with correct payload",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n  name: \"England\",\n  jerseyNumber: 888787,\n};\nconst response = await axios.post(\n  API_URL + \"/create-playerlist\",\n  payload,\n  headerConfig()\n);\nexpect(response.status).to.be.equal(201);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "70e3c853-f58a-442c-ac6e-d42c641d6468",
              "parentUUID": "8dca376d-65bc-4f9e-bd1f-93d21211a99d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create player list without adding name",
              "fullTitle": "Create player list Create player list without adding name",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const payload = {\n    jerseyNumber: 888787,\n  };\n  const response = await axios.post(\n    API_URL + \"/create-playerlist\",\n    payload,\n    headerConfig()\n  );\n  expect(response.status).not.to.be.equal(201);\n  expect(response.data).to.be.an(\"object\");\n} catch (error) {\n  if (error.response) {\n    expect(error.response.status).not.to.be.equal(201);\n  } else {\n    throw error;\n  }\n}",
              "err": {},
              "uuid": "f9eadc3a-8137-4567-91de-8d20d88c3635",
              "parentUUID": "8dca376d-65bc-4f9e-bd1f-93d21211a99d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create player list without adding Jersey Number",
              "fullTitle": "Create player list Create player list without adding Jersey Number",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const payload = {\n    name: \"England\",\n  };\n  const response = await axios.post(\n    API_URL + \"/create-playerlist\",\n    payload,\n    headerConfig()\n  );\n  expect(response.status).not.to.be.equal(201);\n  expect(response.data).to.be.an(\"object\");\n} catch (error) {\n  if (error.response) {\n    expect(error.response.status).not.to.be.equal(201);\n  } else {\n    throw error;\n  }\n}",
              "err": {},
              "uuid": "bfe0be77-ef90-41c6-9878-8ffe82eb218a",
              "parentUUID": "8dca376d-65bc-4f9e-bd1f-93d21211a99d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "70e3c853-f58a-442c-ac6e-d42c641d6468",
            "f9eadc3a-8137-4567-91de-8d20d88c3635",
            "bfe0be77-ef90-41c6-9878-8ffe82eb218a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 27,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "81d2557c-ceae-4fce-bee5-09d8940f023a",
          "title": "Get player list",
          "fullFile": "E:\\MERN Coding Challenge DYN\\Node JS DY\\test\\player_list.spec.js",
          "file": "\\test\\player_list.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get each team player lists",
              "fullTitle": "Get player list Get each team player lists",
              "timedOut": false,
              "duration": 69,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const res = await axios.get(API_URL + \"/get-player-list\", headerConfig());\nexpect(res.status).to.be.equal(200);\nexpect(res.data).to.be.an(\"array\");",
              "err": {},
              "uuid": "cd8fad06-ab36-42a8-8c19-d9175a49098a",
              "parentUUID": "81d2557c-ceae-4fce-bee5-09d8940f023a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cd8fad06-ab36-42a8-8c19-d9175a49098a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 69,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3c06f2d7-c4ec-4cae-b15b-f5a30e94261c",
          "title": "Delete player",
          "fullFile": "E:\\MERN Coding Challenge DYN\\Node JS DY\\test\\player_list.spec.js",
          "file": "\\test\\player_list.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Delete single player",
              "fullTitle": "Delete player Delete single player",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.delete(\n  API_URL + \"/delete-player/\" + newplayer._id,\n  headerConfig()\n);\nexpect(response.status).to.be.equal(200);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "c95080c1-d7c5-4456-a591-99493e916f54",
              "parentUUID": "3c06f2d7-c4ec-4cae-b15b-f5a30e94261c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c95080c1-d7c5-4456-a591-99493e916f54"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 26,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}